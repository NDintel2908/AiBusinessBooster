
import React, { useState } from "react";
import { motion } from "framer-motion";
import { 
  Accordion, 
  AccordionContent, 
  AccordionItem, 
  AccordionTrigger 
} from "@/components/ui/accordion";
import { 
  Tooltip, 
  TooltipContent, 
  TooltipProvider, 
  TooltipTrigger 
} from "@/components/ui/tooltip";
import { GlassCard } from "@/components/ui/glass-card";

const businessData = [
  {
    groupId: "manufacturing",
    groupTitle: "S·∫£n xu·∫•t & Ch·∫ø t·∫°o",
    groupColor: "from-blue-500 to-cyan-500",
    sectors: [
      { 
        name: "S·∫£n xu·∫•t thi·∫øt b·ªã ƒëi·ªán t·ª≠", 
        description: "S·∫£n xu·∫•t c√°c thi·∫øt b·ªã ƒëi·ªán t·ª≠ ti√™u d√πng, linh ki·ªán v√† ph·ª• t√πng c√¥ng nghi·ªáp",
        icon: "üì±"
      },
      { 
        name: "C√¥ng nghi·ªáp √¥ t√¥", 
        description: "S·∫£n xu·∫•t v√† l·∫Øp r√°p xe √¥ t√¥, xe m√°y v√† ph·ª• t√πng",
        icon: "üöó"
      },
      { 
        name: "D·ªát may & Th·ªùi trang", 
        description: "S·∫£n xu·∫•t v·∫£i, may m·∫∑c v√† thi·∫øt k·∫ø th·ªùi trang",
        icon: "üëî"
      },
      { 
        name: "Th·ª±c ph·∫©m & ƒê·ªì u·ªëng", 
        description: "Ch·∫ø bi·∫øn th·ª±c ph·∫©m, s·∫£n xu·∫•t ƒë·ªì u·ªëng v√† nguy√™n li·ªáu",
        icon: "üçî"
      },
      { 
        name: "D∆∞·ª£c ph·∫©m", 
        description: "Nghi√™n c·ª©u, ph√°t tri·ªÉn v√† s·∫£n xu·∫•t thu·ªëc, vaccine",
        icon: "üíä"
      },
      { 
        name: "H√≥a ch·∫•t & V·∫≠t li·ªáu", 
        description: "S·∫£n xu·∫•t h√≥a ch·∫•t c√¥ng nghi·ªáp, v·∫≠t li·ªáu x√¢y d·ª±ng",
        icon: "üß™"
      }
    ]
  },
  {
    groupId: "technology",
    groupTitle: "C√¥ng ngh·ªá & D·ªãch v·ª• s·ªë",
    groupColor: "from-purple-500 to-pink-500",
    sectors: [
      { 
        name: "Ph·∫ßn m·ªÅm & CNTT", 
        description: "Ph√°t tri·ªÉn ph·∫ßn m·ªÅm, ·ª©ng d·ª•ng di ƒë·ªông v√† gi·∫£i ph√°p IT",
        icon: "üíª"
      },
      { 
        name: "Th∆∞∆°ng m·∫°i ƒëi·ªán t·ª≠", 
        description: "N·ªÅn t·∫£ng b√°n h√†ng online, marketplace v√† logistics",
        icon: "üõí"
      },
      { 
        name: "Fintech", 
        description: "C√¥ng ngh·ªá t√†i ch√≠nh, thanh to√°n ƒëi·ªán t·ª≠, blockchain",
        icon: "üí≥"
      },
      { 
        name: "Gi√°o d·ª•c tr·ª±c tuy·∫øn", 
        description: "N·ªÅn t·∫£ng h·ªçc t·∫≠p, kh√≥a h·ªçc online v√† edtech",
        icon: "üìö"
      },
      { 
        name: "Gaming & Gi·∫£i tr√≠ s·ªë", 
        description: "Ph√°t tri·ªÉn game, content digital v√† streaming",
        icon: "üéÆ"
      },
      { 
        name: "IoT & AI", 
        description: "Internet of Things, tr√≠ tu·ªá nh√¢n t·∫°o v√† automation",
        icon: "ü§ñ"
      }
    ]
  },
  {
    groupId: "services",
    groupTitle: "D·ªãch v·ª• & Th∆∞∆°ng m·∫°i",
    groupColor: "from-green-500 to-teal-500",
    sectors: [
      { 
        name: "B√°n l·∫ª & Ph√¢n ph·ªëi", 
        description: "Chu·ªói c·ª≠a h√†ng, si√™u th·ªã v√† h·ªá th·ªëng ph√¢n ph·ªëi",
        icon: "üè™"
      },
      { 
        name: "Ng√¢n h√†ng & T√†i ch√≠nh", 
        description: "D·ªãch v·ª• ng√¢n h√†ng, b·∫£o hi·ªÉm v√† qu·∫£n l√Ω t√†i s·∫£n",
        icon: "üè¶"
      },
      { 
        name: "Du l·ªãch & Kh√°ch s·∫°n", 
        description: "D·ªãch v·ª• du l·ªãch, kh√°ch s·∫°n v√† ngh·ªâ d∆∞·ª°ng",
        icon: "üè®"
      },
      { 
        name: "V·∫≠n t·∫£i & Logistics", 
        description: "V·∫≠n chuy·ªÉn h√†ng h√≥a, logistics v√† supply chain",
        icon: "üöõ"
      },
      { 
        name: "Y t·∫ø & ChƒÉm s√≥c s·ª©c kh·ªèe", 
        description: "B·ªánh vi·ªán, ph√≤ng kh√°m v√† d·ªãch v·ª• y t·∫ø",
        icon: "üè•"
      },
      { 
        name: "T∆∞ v·∫•n & D·ªãch v·ª• chuy√™n nghi·ªáp", 
        description: "T∆∞ v·∫•n qu·∫£n l√Ω, ph√°p l√Ω v√† d·ªãch v·ª• B2B",
        icon: "üíº"
      }
    ]
  },
  {
    groupId: "infrastructure",
    groupTitle: "H·∫° t·∫ßng & NƒÉng l∆∞·ª£ng",
    groupColor: "from-orange-500 to-red-500",
    sectors: [
      { 
        name: "X√¢y d·ª±ng & B·∫•t ƒë·ªông s·∫£n", 
        description: "Ph√°t tri·ªÉn d·ª± √°n, x√¢y d·ª±ng v√† qu·∫£n l√Ω b·∫•t ƒë·ªông s·∫£n",
        icon: "üèóÔ∏è"
      },
      { 
        name: "NƒÉng l∆∞·ª£ng t√°i t·∫°o", 
        description: "ƒêi·ªán m·∫∑t tr·ªùi, gi√≥ v√† c√°c ngu·ªìn nƒÉng l∆∞·ª£ng xanh",
        icon: "‚ö°"
      },
      { 
        name: "D·∫ßu kh√≠ & Khai th√°c", 
        description: "ThƒÉm d√≤, khai th√°c v√† ch·∫ø bi·∫øn d·∫ßu kh√≠",
        icon: "‚õΩ"
      },
      { 
        name: "Vi·ªÖn th√¥ng", 
        description: "M·∫°ng di ƒë·ªông, internet v√† h·∫° t·∫ßng vi·ªÖn th√¥ng",
        icon: "üì°"
      },
      { 
        name: "N√¥ng nghi·ªáp & Th·ªßy s·∫£n", 
        description: "S·∫£n xu·∫•t n√¥ng s·∫£n, chƒÉn nu√¥i v√† nu√¥i tr·ªìng th·ªßy s·∫£n",
        icon: "üåæ"
      },
      { 
        name: "M√¥i tr∆∞·ªùng & T√°i ch·∫ø", 
        description: "X·ª≠ l√Ω ch·∫•t th·∫£i, t√°i ch·∫ø v√† b·∫£o v·ªá m√¥i tr∆∞·ªùng",
        icon: "‚ôªÔ∏è"
      },
      { 
        name: "H√†ng kh√¥ng & V≈© tr·ª•", 
        description: "H√†ng kh√¥ng d√¢n d·ª•ng, v·∫≠n t·∫£i h√†ng kh√¥ng v√† c√¥ng ngh·ªá v≈© tr·ª•",
        icon: "‚úàÔ∏è"
      }
    ]
  }
];

export default function BusinessSectorsSection() {
  const [hoveredSector, setHoveredSector] = useState<string | null>(null);

  // Flatten all sectors for icon grid
  const allSectors = businessData.flatMap(group => 
    group.sectors.map(sector => ({
      ...sector,
      groupColor: group.groupColor,
      groupTitle: group.groupTitle
    }))
  );

  return (
    <section id="business-sectors" className="py-20 relative">
      {/* Background Effects */}
      <div className="absolute inset-0 z-0 opacity-20">
        <div className="absolute top-1/4 right-1/4 w-1/3 h-1/3 bg-blue-500 opacity-10 blur-[120px] rounded-full"></div>
        <div className="absolute bottom-1/4 left-1/4 w-1/3 h-1/3 bg-purple-500 opacity-10 blur-[120px] rounded-full"></div>
      </div>

      <div className="container mx-auto px-4 z-10 relative">
        {/* Section Header */}
        <motion.div 
          className="text-center max-w-4xl mx-auto mb-16"
          initial={{ opacity: 0, y: 30 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6 }}
          viewport={{ once: true }}
        >
          <div className="inline-flex items-center px-3 py-1 rounded-full bg-blue-500/20 border border-blue-500/40 mb-4">
            <span className="text-base md:text-lg font-medium text-blue-400 font-primary">Ng√†nh ngh·ªÅ h·ªó tr·ª£</span>
          </div>
          <h2 className="text-3xl md:text-4xl font-heading font-bold mb-6 text-white">
            25 Ng√†nh kinh doanh ƒë∆∞·ª£c <span className="text-blue-400">BCP.Global</span> h·ªó tr·ª£
          </h2>
          <p className="text-gray-300 font-primary">
            Kh√°m ph√° danh s√°ch ƒë·∫ßy ƒë·ªß c√°c ng√†nh kinh doanh m√† n·ªÅn t·∫£ng AI c·ªßa ch√∫ng t√¥i c√≥ th·ªÉ h·ªó tr·ª£ k·∫øt n·ªëi v√† ph√°t tri·ªÉn
          </p>
        </motion.div>

        {/* Business Groups Accordion */}
        <motion.div
          className="max-w-4xl mx-auto mb-20"
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6, delay: 0.2 }}
          viewport={{ once: true }}
        >
          <h3 className="text-2xl font-heading font-bold text-white mb-8 text-center">
            Danh s√°ch ng√†nh theo nh√≥m
          </h3>

          <Accordion type="multiple" className="space-y-4">
            {businessData.map((group, index) => (
              <AccordionItem 
                key={group.groupId} 
                value={group.groupId}
                className="border-none"
              >
                <GlassCard className="border-gray-700/50 bg-gray-800/30 overflow-hidden">
                  <AccordionTrigger className="px-6 py-4 hover:no-underline group">
                    <div className="flex items-center space-x-4">
                      <div className={`w-4 h-4 rounded-full bg-gradient-to-r ${group.groupColor}`}></div>
                      <span className="text-xl font-semibold text-white group-hover:text-blue-400 transition-colors">
                        {group.groupTitle}
                      </span>
                      <span className="text-sm text-gray-400">
                        ({group.sectors.length} ng√†nh)
                      </span>
                    </div>
                  </AccordionTrigger>
                  <AccordionContent className="px-6 pb-6">
                    <div className="grid grid-cols-1 md:grid-cols-2 gap-4 mt-4">
                      {group.sectors.map((sector, sectorIndex) => (
                        <motion.div
                          key={sector.name}
                          className="flex items-start space-x-3 p-4 rounded-lg bg-gray-800/50 hover:bg-gray-700/50 transition-colors"
                          initial={{ opacity: 0, x: -20 }}
                          whileInView={{ opacity: 1, x: 0 }}
                          transition={{ duration: 0.4, delay: sectorIndex * 0.1 }}
                          viewport={{ once: true }}
                        >
                          <span className="text-2xl">{sector.icon}</span>
                          <div>
                            <h4 className="font-semibold text-white mb-1">{sector.name}</h4>
                            <p className="text-sm text-gray-400 leading-relaxed">
                              {sector.description}
                            </p>
                          </div>
                        </motion.div>
                      ))}
                    </div>
                  </AccordionContent>
                </GlassCard>
              </AccordionItem>
            ))}
          </Accordion>
        </motion.div>

        {/* Icons Grid Section */}
        <motion.div
          className="max-w-6xl mx-auto"
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6, delay: 0.4 }}
          viewport={{ once: true }}
        >
          <h3 className="text-2xl font-heading font-bold text-white mb-8 text-center">
            Bi·ªÉu t∆∞·ª£ng ng√†nh ngh·ªÅ
          </h3>

          <TooltipProvider>
            <div className="grid grid-cols-3 sm:grid-cols-4 md:grid-cols-5 lg:grid-cols-6 gap-6">
              {allSectors.map((sector, index) => (
                <motion.div
                  key={sector.name}
                  initial={{ opacity: 0, scale: 0.8 }}
                  whileInView={{ opacity: 1, scale: 1 }}
                  transition={{ duration: 0.4, delay: index * 0.05 }}
                  viewport={{ once: true }}
                  onMouseEnter={() => setHoveredSector(sector.name)}
                  onMouseLeave={() => setHoveredSector(null)}
                >
                  <Tooltip>
                    <TooltipTrigger asChild>
                      <div className={`
                        flex flex-col items-center p-4 rounded-xl 
                        bg-gray-800/30 border border-gray-700/50 
                        hover:border-blue-400/50 hover:bg-gray-700/50
                        transition-all duration-300 cursor-pointer
                        ${hoveredSector === sector.name ? 'scale-105 shadow-lg shadow-blue-500/20' : ''}
                      `}>
                        <div className={`
                          w-12 h-12 rounded-full bg-gradient-to-r ${sector.groupColor} 
                          flex items-center justify-center mb-3
                          text-2xl shadow-lg
                        `}>
                          {sector.icon}
                        </div>
                        <span className="text-xs font-medium text-gray-300 text-center leading-tight">
                          {sector.name}
                        </span>
                      </div>
                    </TooltipTrigger>
                    <TooltipContent className="max-w-xs p-3 bg-gray-900 border border-gray-700">
                      <div className="space-y-2">
                        <div className="font-semibold text-white">{sector.name}</div>
                        <div className="text-sm text-gray-400">{sector.description}</div>
                        <div className={`text-xs bg-gradient-to-r ${sector.groupColor} bg-clip-text text-transparent font-medium`}>
                          {sector.groupTitle}
                        </div>
                      </div>
                    </TooltipContent>
                  </Tooltip>
                </motion.div>
              ))}
            </div>
          </TooltipProvider>
        </motion.div>

        {/* Call to Action */}
        <motion.div
          className="text-center mt-16"
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6, delay: 0.6 }}
          viewport={{ once: true }}
        >
          <p className="text-gray-400 mb-6">
            Ng√†nh c·ªßa b·∫°n ch∆∞a c√≥ trong danh s√°ch? Ch√∫ng t√¥i lu√¥n s·∫µn s√†ng m·ªü r·ªông h·ªó tr·ª£
          </p>
          <button className="px-6 py-3 bg-gradient-to-r from-blue-500 to-purple-600 text-white font-semibold rounded-lg hover:shadow-lg hover:shadow-blue-500/25 transition-all duration-300">
            Li√™n h·ªá t∆∞ v·∫•n
          </button>
        </motion.div>
      </div>
    </section>
  );
}
