import React, { useState } from "react";
import { motion } from "framer-motion";
import {
  Accordion,
  AccordionContent,
  AccordionItem,
  AccordionTrigger,
} from "@/components/ui/accordion";
import {
  Tooltip,
  TooltipContent,
  TooltipProvider,
  TooltipTrigger,
} from "@/components/ui/tooltip";
import { GlassCard } from "@/components/ui/glass-card";

const businessData = [
  {
    groupId: "manufacturing",
    groupTitle:
      "Nh√≥m A - Cung c·∫•p d·ªãch v·ª• B2B chuy√™n nghi·ªáp (Professional services)",
    groupColor: "from-blue-500 to-cyan-500",
    sectors: [
      {
        name: "Ph√°t tri·ªÉn gia c√¥ng ph·∫ßn m·ªÅm CNTT, AI v√† IOT",
        description:
          "Ph√°t tri·ªÉn ·ª©ng d·ª•ng, h·ªá th·ªëng ph·∫ßn m·ªÅm, gi·∫£i ph√°p AI v√† thi·∫øt b·ªã IoT th√¥ng minh",
        icon: "üíª",
      },
      {
        name: "T∆∞ v·∫•n k·∫ø to√°n, t√†i ch√≠nh, ph√°p l√Ω, b·∫£o hi·ªÉm",
        description:
          "Cung c·∫•p d·ªãch v·ª• t∆∞ v·∫•n chuy√™n nghi·ªáp v·ªÅ t√†i ch√≠nh, k·∫ø to√°n, ph√°p l√Ω v√† b·∫£o hi·ªÉm",
        icon: "üìä",
      },
      {
        name: "D·ªãch v·ª• nh√¢n s·ª±, tuy·ªÉn d·ª•ng v√† ƒë√†o t·∫°o",
        description:
          "T∆∞ v·∫•n nh√¢n s·ª±, tuy·ªÉn d·ª•ng nh√¢n t√†i v√† ph√°t tri·ªÉn ch∆∞∆°ng tr√¨nh ƒë√†o t·∫°o",
        icon: "üë•",
      },
      {
        name: "Agency qu·∫£ng c√°o, marketing",
        description:
          "Thi·∫øt k·∫ø chi·∫øn l∆∞·ª£c marketing, qu·∫£ng c√°o v√† x√¢y d·ª±ng th∆∞∆°ng hi·ªáu",
        icon: "üì¢",
      },
      {
        name: "D·ªãch v·ª• ph√¢n ph·ªëi, th∆∞∆°ng m·∫°i n·ªôi ƒë·ªãa",
        description:
          "Ph√¢n ph·ªëi s·∫£n ph·∫©m, kinh doanh b√°n l·∫ª v√† th∆∞∆°ng m·∫°i trong n∆∞·ªõc",
        icon: "üè™",
      },
      {
        name: "D·ªãch v·ª• v·∫≠n chuy·ªÉn, logistic, ph√¢n ph·ªëi v√† l∆∞u tr·ªØ h√†ng ho√°",
        description:
          "Qu·∫£n l√Ω chu·ªói cung ·ª©ng, v·∫≠n chuy·ªÉn v√† kho b√£i logistics chuy√™n nghi·ªáp",
        icon: "üöõ",
      },
      {
        name: "Thi·∫øt k·∫ø ki·∫øn tr√∫c, n·ªôi th·∫•t vƒÉn ph√≤ng",
        description:
          "Thi·∫øt k·∫ø ki·∫øn tr√∫c, quy ho·∫°ch kh√¥ng gian v√† n·ªôi th·∫•t chuy√™n nghi·ªáp",
        icon: "üèóÔ∏è",
      },
      {
        name: "Kinh doanh b·∫•t ƒë·ªông s·∫£n vƒÉn ph√≤ng, th∆∞∆°ng m·∫°i, b√°n l·∫ª, khu c√¥ng nghi·ªáp",
        description:
          "ƒê·∫ßu t∆∞, ph√°t tri·ªÉn v√† kinh doanh c√°c d·ª± √°n b·∫•t ƒë·ªông s·∫£n th∆∞∆°ng m·∫°i v√† c√¥ng nghi·ªáp",
        icon: "üè¢",
      },
      {
        name: "Nh√≥m d·ªãch v·ª• xu·∫•t kh·∫©u, ph√°t tri·ªÉn th·ªã tr∆∞·ªùng xuy√™n qu·ªëc gia",
        description:
          "H·ªó tr·ª£ xu·∫•t kh·∫©u, m·ªü r·ªông th·ªã tr∆∞·ªùng qu·ªëc t·∫ø v√† th∆∞∆°ng m·∫°i xuy√™n bi√™n gi·ªõi",
        icon: "üåç",
      },
    ],
  },
  {
    groupId: "technology",
    groupTitle:
      "Nh√≥m B - Cung c·∫•p nguy√™n v·∫≠t li·ªáu, h√†ng h√≥a cho doanh nghi·ªáp s·∫£n xu·∫•t",
    groupColor: "from-purple-500 to-pink-500",
    sectors: [
      {
        name: "N√¥ng Nghi·ªáp v√† Th·ªßy S·∫£n",
        description:
          "Cung c·∫•p nguy√™n li·ªáu th√¥ nh∆∞ n√¥ng s·∫£n, th·ªßy s·∫£n cho c√°c doanh nghi·ªáp ch·∫ø bi·∫øn th·ª±c ph·∫©m",
        icon: "üåæ",
      },
      {
        name: "Th·ª±c Ph·∫©m",
        description:
          "Cung c·∫•p nguy√™n li·ªáu th·ª±c ph·∫©m nh∆∞ d·∫ßu th·ª±c v·∫≠t, gia v·ªã cho c√°c doanh nghi·ªáp ch·∫ø bi·∫øn th·ª±c ph·∫©m",
        icon: "üçΩÔ∏è",
      },
      {
        name: "D·ªát May",
        description:
          "Cung c·∫•p nguy√™n li·ªáu nh∆∞ s·ª£i, v·∫£i cho c√°c doanh nghi·ªáp may m·∫∑c",
        icon: "üßµ",
      },
      {
        name: "Gi·∫•y",
        description:
          "Cung c·∫•p nguy√™n li·ªáu nh∆∞ b·ªôt gi·∫•y, gi·∫•y th√¥ cho c√°c doanh nghi·ªáp s·∫£n xu·∫•t gi·∫•y v√† bao b√¨",
        icon: "üìÑ",
      },
      {
        name: "H√≥a Ch·∫•t",
        description:
          "Cung c·∫•p nguy√™n li·ªáu h√≥a ch·∫•t nh∆∞ nh·ª±a nguy√™n sinh, h√≥a ch·∫•t c∆° b·∫£n cho c√°c ng√†nh c√¥ng nghi·ªáp kh√°c",
        icon: "üß™",
      },
      {
        name: "V·∫≠t T∆∞ X√¢y D·ª±ng",
        description:
          "Cung c·∫•p nguy√™n li·ªáu nh∆∞ xi mƒÉng, th√©p, g·∫°ch cho c√°c c√¥ng ty x√¢y d·ª±ng",
        icon: "üß±",
      },
      {
        name: "Khai Kho√°ng",
        description:
          "Cung c·∫•p nguy√™n li·ªáu th√¥ nh∆∞ ƒë√°, c√°t, s·ªèi, qu·∫∑ng kim lo·∫°i cho c√°c ng√†nh x√¢y d·ª±ng v√† luy·ªán kim",
        icon: "‚õèÔ∏è",
      },
    ],
  },
  {
    groupId: "services",
    groupTitle:
      "Nh√≥m C - S·∫£n xu·∫•t, gia c√¥ng cung c·∫•p s·∫£n ph·∫©m cho ng∆∞·ªùi d√πng cu·ªëi",
    groupColor: "from-green-500 to-teal-500",
    sectors: [
      {
        name: "Nh√† S·∫£n Xu·∫•t Th·ª±c Ph·∫©m v√† ƒê·ªì U·ªëng",
        description:
          "Ch·∫ø bi·∫øn v√† s·∫£n xu·∫•t c√°c s·∫£n ph·∫©m th·ª±c ph·∫©m, ƒë·ªì u·ªëng ti√™u d√πng ph·ª•c v·ª• th·ªã tr∆∞·ªùng b√°n l·∫ª",
        icon: "ü•§",
      },
      {
        name: "Nh√† S·∫£n Xu·∫•t D·ªát May, S·∫£n Ph·∫©m Th·ªùi Trang",
        description:
          "S·∫£n xu·∫•t qu·∫ßn √°o, ph·ª• ki·ªán th·ªùi trang v√† c√°c s·∫£n ph·∫©m d·ªát may xu·∫•t kh·∫©u",
        icon: "üëï",
      },
      {
        name: "Nh√† S·∫£n Xu·∫•t H√†ng Ti√™u D√πng",
        description:
          "S·∫£n xu·∫•t c√°c s·∫£n ph·∫©m ti√™u d√πng thi·∫øt y·∫øu nh∆∞ m·ªπ ph·∫©m, ƒë·ªì d√πng gia ƒë√¨nh, vƒÉn ph√≤ng ph·∫©m",
        icon: "üõçÔ∏è",
      },
      {
        name: "Nh√† S·∫£n Xu·∫•t ƒêi·ªán T·ª≠, Thi·∫øt B·ªã Gia D·ª•ng",
        description:
          "S·∫£n xu·∫•t v√† l·∫Øp r√°p c√°c thi·∫øt b·ªã ƒëi·ªán t·ª≠, m√°y m√≥c v√† ƒë·ªì gia d·ª•ng hi·ªán ƒë·∫°i",
        icon: "üì±",
      },
      {
        name: "Nh√† S·∫£n Xu·∫•t Xe v√† Ph·ª• T√πng",
        description:
          "S·∫£n xu·∫•t v√† l·∫Øp r√°p √¥ t√¥, xe m√°y c√πng c√°c linh ki·ªán, ph·ª• t√πng thay th·∫ø",
        icon: "üöó",
      },
    ],
  },
  {
    groupId: "infrastructure",
    groupTitle: "Nh√≥m D - Gia c√¥ng linh ki·ªán & ph·ª• tr·ª£ c√¥ng nghi·ªáp",
    groupColor: "from-orange-500 to-red-500",
    sectors: [
      {
        name: "Gia C√¥ng Linh Ki·ªán Ph·ª• Tr·ª£ C√¥ng Nghi·ªáp",
        description:
          "S·∫£n xu·∫•t c√°c chi ti·∫øt, b·ªô ph·∫≠n ƒë∆∞·ª£c s·ª≠ d·ª•ng trong c√°c ng√†nh c√¥ng nghi·ªáp kh√°c nhau",
        icon: "‚öôÔ∏è",
      },
      {
        name: "Gia C√¥ng Linh Ki·ªán Ng√†nh B√°n D·∫´n",
        description: "S·∫£n xu·∫•t, gia c√¥ng m·∫°ch t√≠ch h·ª£p v√† transistor",
        icon: "üîå",
      },
      {
        name: "Gia C√¥ng C∆° Kh√≠ Ch√≠nh X√°c",
        description:
          "Ti·ªán, phay CNC, gia c√¥ng khu√¥n m·∫´u, ph·ª•c v·ª• cho c√°c ng√†nh nh∆∞ √¥ t√¥, t·ª± ƒë·ªông h√≥a, v√† s·∫£n xu·∫•t m√°y m√≥c.",
        icon: "üîß",
      },
      {
        name: "S·∫£n Xu·∫•t v√† Cung C·∫•p Thi·∫øt B·ªã Chuy√™n Ng√†nh",
        description:
          "Gia c√¥ng, s·∫£n xu·∫•t v√† cung c·∫•p thi·∫øt b·ªã chuy√™n ng√†nh cho c√°c ng√†nh thi·∫øt b·ªã y t·∫ø, thi·∫øt b·ªã t·ª± ƒë·ªông h√≥a, v√† c√°c ph·ª• t√πng √¥ t√¥",
        icon: "üè≠",
      },
    ],
  },
];

export default function BusinessSectorsSection() {
  const [hoveredSector, setHoveredSector] = useState<string | null>(null);

  // Flatten all sectors for icon grid
  const allSectors = businessData.flatMap((group) =>
    group.sectors.map((sector) => ({
      ...sector,
      groupColor: group.groupColor,
      groupTitle: group.groupTitle,
    })),
  );

  return (
    <section id="business-sectors" className="py-20 relative">
      {/* Background Effects */}
      <div className="absolute inset-0 z-0 opacity-20">
        <div className="absolute top-1/4 right-1/4 w-1/3 h-1/3 bg-blue-500 opacity-10 blur-[120px] rounded-full"></div>
        <div className="absolute bottom-1/4 left-1/4 w-1/3 h-1/3 bg-purple-500 opacity-10 blur-[120px] rounded-full"></div>
      </div>

      <div className="container mx-auto px-4 z-10 relative">
        {/* Section Header */}
        <motion.div
          className="text-center max-w-4xl mx-auto mb-16"
          initial={{ opacity: 0, y: 30 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6 }}
          viewport={{ once: true }}
        >
          <div className="inline-flex items-center px-3 py-1 rounded-full bg-blue-500/20 border border-blue-500/40 mb-4">
            <span className="text-base md:text-lg font-medium text-blue-400 font-primary">
              Ng√†nh ngh·ªÅ h·ªó tr·ª£
            </span>
          </div>
          <h2 className="text-3xl md:text-4xl font-heading font-bold mb-6 text-white">
            25 Ng√†nh kinh doanh ƒë∆∞·ª£c{" "}
            <span className="text-blue-400">BCP.Global</span> h·ªó tr·ª£
          </h2>
          <p className="text-gray-300 font-primary">
            Kh√°m ph√° danh s√°ch ƒë·∫ßy ƒë·ªß c√°c ng√†nh kinh doanh m√† n·ªÅn t·∫£ng AI c·ªßa
            ch√∫ng t√¥i c√≥ th·ªÉ h·ªó tr·ª£ k·∫øt n·ªëi v√† ph√°t tri·ªÉn
          </p>
        </motion.div>

        {/* Business Groups Accordion */}
        <motion.div
          className="max-w-4xl mx-auto mb-20"
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6, delay: 0.2 }}
          viewport={{ once: true }}
        >
          <h3 className="text-2xl font-heading font-bold text-white mb-8 text-center">
            Danh s√°ch ng√†nh theo nh√≥m
          </h3>

          <Accordion type="multiple" className="space-y-4">
            {businessData.map((group, index) => (
              <AccordionItem
                key={group.groupId}
                value={group.groupId}
                className="border-none"
              >
                <GlassCard className="border-gray-700/50 bg-gray-800/30 overflow-hidden">
                  <AccordionTrigger className="px-6 py-4 hover:no-underline group">
                    <div className="flex items-center space-x-4">
                      <div
                        className={`w-4 h-4 rounded-full bg-gradient-to-r ${group.groupColor}`}
                      ></div>
                      <span className="text-xl font-semibold text-white group-hover:text-blue-400 transition-colors">
                        {group.groupTitle}
                      </span>
                      <span className="text-sm text-gray-400">
                        ({group.sectors.length} ng√†nh)
                      </span>
                    </div>
                  </AccordionTrigger>
                  <AccordionContent className="px-6 pb-6">
                    <div className="grid grid-cols-1 md:grid-cols-2 gap-4 mt-4">
                      {group.sectors.map((sector, sectorIndex) => (
                        <motion.div
                          key={sector.name}
                          className="flex items-start space-x-3 p-4 rounded-lg bg-gray-800/50 hover:bg-gray-700/50 transition-colors"
                          initial={{ opacity: 0, x: -20 }}
                          whileInView={{ opacity: 1, x: 0 }}
                          transition={{
                            duration: 0.4,
                            delay: sectorIndex * 0.1,
                          }}
                          viewport={{ once: true }}
                        >
                          <span className="text-2xl">{sector.icon}</span>
                          <div>
                            <h4 className="font-semibold text-white mb-1">
                              {sector.name}
                            </h4>
                            <p className="text-sm text-gray-400 leading-relaxed">
                              {sector.description}
                            </p>
                          </div>
                        </motion.div>
                      ))}
                    </div>
                  </AccordionContent>
                </GlassCard>
              </AccordionItem>
            ))}
          </Accordion>
        </motion.div>

        {/* Call to Action */}
        <motion.div
          className="text-center mt-16"
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6, delay: 0.6 }}
          viewport={{ once: true }}
        >
          <p className="text-gray-400 mb-6">
            Ng√†nh c·ªßa b·∫°n ch∆∞a c√≥ trong danh s√°ch? Ch√∫ng t√¥i lu√¥n s·∫µn s√†ng m·ªü
            r·ªông h·ªó tr·ª£
          </p>
          <button
            className="px-6 py-3 bg-gradient-to-r from-blue-500 to-purple-600 text-white font-semibold rounded-lg hover:shadow-lg hover:shadow-blue-500/25 transition-all duration-300"
            onClick={() => {
              document.getElementById("contact")?.scrollIntoView({
                behavior: "smooth",
                block: "start",
              });
            }}
          >
            Li√™n h·ªá t∆∞ v·∫•n
          </button>
        </motion.div>
      </div>
    </section>
  );
}
